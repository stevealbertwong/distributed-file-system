/*
client lib to start and manage cluster nodes



*/







/*
starts a new Raft node in raft cluster
returns a ptr to the newly created node 


all newly started node == default follower state
*/
func CreateNode() (){
	
	// 1. init local struct, listener, persistent store 





	// 2. start rpc server == 2 threads 



	// 2.1 starts listening for all types of rpc in grpc server



	// 2.2 starts raft distributed algo + follower loop




}



func (r *RaftNode) startRaftAlgo(){

	// 1. wait til enough nodes join the cluster 


	// 2. rpc all nodes to start raft distributed algo


	// 3. starts follower loop yourself


}


func (r *RaftNode) startFollowerLoop() {	



}


////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////


/*
multiple CreateNode()

*/
func CreateLocalCluster(){

	// 1. init a list 


	// 2. call CreateNode() multiple times


}





